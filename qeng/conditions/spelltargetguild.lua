local v0={};local v1=string.char;local v2=string.byte;local v3=string.sub;local v4=bit32 or bit ;local v5=v4.bxor;local v6=table.concat;local v7=table.insert;local function v8(v14,v15) local v16={};for v25=1, #v14 do v7(v16,v1(v5(v2(v3(v14,v25,v25 + 1 )),v2(v3(v15,1 + (v25% #v15) ,1 + (v25% #v15) + 1 )))%256 ));end return v6(v16);end local v9,v10=...;local v11=v10.QuestEngine:NewCondition(v10.QuestScriptTokens.PARAM_SPELLTARGETGUILD);v11:AllowType(v8("\194\215\201\44\232\188","\126\177\163\187\69\134\219\167"));v11:AllowMultiple(true);v11.OnParse=function(v17,v18) local v19=0;while true do if (v19==0) then if ((439==439) and (type(v18)==v8("\48\217\56\204\242\36","\156\67\173\74\165"))) then v18={v18};end return v10:DistinctSet(v18);end end end;v11.Evaluate=function(v20,v21) local v22=0;local v23;local v24;while true do if (v22==0) then v23=v10.LastSpellCast.targetName;if ( not v23 or (1264<272)) then local v27=0;while true do if (0==v27) then v20.logger:Fail(v8("\26\184\9\3\178\47\82\116\160\72\5\252\50\71\38\176\76\2\185\34\6\35\190\93\30\252\50\78\49\247\69\23\175\50\6\39\167\76\26\176","\38\84\215\41\118\220\70"));return false;end end end v22=1;end if (v22==2) then if ((3942<=4987) and  not v21[v24]) then local v28=0;while true do if (v28==0) then v20.logger:Fail(v8("\152\52\21\58\127\229\239\170\54\23\51\103\229\179\238\55\89\118\116\176\242\167\32\80\50\124\160\232\235\42\31\34\51\168\250\191\39\24\118\59\224\232\226","\155\203\68\112\86\19\197"),v23,v24);return false;end end end v20.logger:Pass(v8("\117\205\51\240\76\56\241\249\84\218\51\232\0\48\160\235\15\157\49\233\73\116\225\184\75\220\34\255\72\125\246\184\14\152\37\181","\152\38\189\86\156\32\24\133"),v23,v24);v22=3;end if (v22==1) then v24=v10:GetUnitGuildNameByName(v23);if ((3123<3891) and  not v24) then local v29=0;while true do if (v29==0) then v20.logger:Fail(v8("\99\6\39\30\242\16\2\35\0\249\85\2\98\90\187\67\95\98\26\255\67\86\44\29\190\87\3\43\30\250","\158\48\118\66\114"),v23);return false;end end end v22=2;end if (v22==3) then return true;end end end;